思路：
该题是寻找给定字符串的最长回文子串，如："babad"，输出"bab"或者"aba"，重点在于如何寻找这个子串，代码如下；


实现代码：
class Solution {
public:
    string longestPalindrome(string s) {
        if(s.size() < 2) //若s规模小于2，返回s本身即可
            return s;
        int maxLen = 0; //  最大子串的记录值
        string res = "";
        int i = 0;
        while(i < s.size())
        {
            int j = i, k = i; 
		//两个指针，指针k表示重复的字符，指针j表示向前寻找和k不一样的字符为止
            while(k < (s.size() - 1) && s[k+1] == s[k]) //判断是否是类似"aaa"的字符
                k++;
            i = k + 1;
            while(k < (s.size() - 1) && j >= 1 && s[k+1] == s[j-1])
		//判断类似"cbaabc"的形式，然后前向寻找
            {
                j--;
                k++;
            }
            int length = k - j + 1;  //此时最大长度
            if(length > maxLen)
            {
                res = "";
                maxLen = length;
                for(int m = j; m <= k; m++)
                    res += s[m];  //记录最大长度结果
            }
        }
        return res;
    }
};