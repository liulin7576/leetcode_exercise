思路：
此题是由一个有序数组转化为二叉搜索树，需要保证高度平衡；
递归实现，如下代码；

实现代码：
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* search(vector<int>& nums, int st, int ed)  //st代表数组头部，ed代表数组尾部
    {
        if(st > ed)              //若ed<st，表明递归时数组没有元素了 
            return NULL;
        int mid = (st + ed) / 2;      //取中间元素为root节点，保证平衡树
        TreeNode* root = new TreeNode(nums[mid]);
        root->left = search(nums, st, mid-1);
        root->right = search(nums, mid+1, ed);
        return root;
    }
    
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return search(nums, 0, nums.size()-1);
    }
};